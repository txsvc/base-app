# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/googleapis-common-protos-types/all/googleapis-common-protos-types.rbi
#
# googleapis-common-protos-types-1.0.5

module Google
end
module Google::Rpc
end
class Google::Rpc::RetryInfo
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Rpc::DebugInfo
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Rpc::QuotaFailure
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Rpc::QuotaFailure::Violation
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Rpc::ErrorInfo
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Rpc::PreconditionFailure
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Rpc::PreconditionFailure::Violation
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Rpc::BadRequest
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Rpc::BadRequest::FieldViolation
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Rpc::RequestInfo
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Rpc::ResourceInfo
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Rpc::Help
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Rpc::Help::Link
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Rpc::LocalizedMessage
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
module Google::Api
end
module Google::Api::FieldBehavior
  def self.descriptor; end
  def self.lookup(arg0); end
  def self.resolve(arg0); end
end
class Google::Api::ResourceDescriptor
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
module Google::Api::ResourceDescriptor::History
  def self.descriptor; end
  def self.lookup(arg0); end
  def self.resolve(arg0); end
end
class Google::Api::ResourceReference
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Api::Http
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Api::HttpRule
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Api::CustomHttpPattern
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Api::LabelDescriptor
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
module Google::Api::LabelDescriptor::ValueType
  def self.descriptor; end
  def self.lookup(arg0); end
  def self.resolve(arg0); end
end
module Google::Api::LaunchStage
  def self.descriptor; end
  def self.lookup(arg0); end
  def self.resolve(arg0); end
end
class Google::Api::MonitoredResourceDescriptor
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Api::MonitoredResource
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Api::MonitoredResourceMetadata
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
module Google::Logging
end
module Google::Logging::Type
end
class Google::Logging::Type::HttpRequest
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
module Google::Logging::Type::LogSeverity
  def self.descriptor; end
  def self.lookup(arg0); end
  def self.resolve(arg0); end
end
class Google::Rpc::Status
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Api::Distribution
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Api::Distribution::Range
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Api::Distribution::BucketOptions
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Api::Distribution::BucketOptions::Linear
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Api::Distribution::BucketOptions::Exponential
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Api::Distribution::BucketOptions::Explicit
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Api::Distribution::Exemplar
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Api::MetricDescriptor
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
class Google::Api::MetricDescriptor::MetricDescriptorMetadata
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end
module Google::Api::MetricDescriptor::MetricKind
  def self.descriptor; end
  def self.lookup(arg0); end
  def self.resolve(arg0); end
end
module Google::Api::MetricDescriptor::ValueType
  def self.descriptor; end
  def self.lookup(arg0); end
  def self.resolve(arg0); end
end
class Google::Api::Metric
  def ==(arg0); end
  def [](arg0); end
  def []=(arg0, arg1); end
  def clone; end
  def dup; end
  def eql?(arg0); end
  def hash; end
  def initialize(*arg0); end
  def inspect; end
  def method_missing(*arg0); end
  def respond_to_missing?(*arg0); end
  def self.decode(arg0); end
  def self.decode_json(*arg0); end
  def self.descriptor; end
  def self.encode(arg0); end
  def self.encode_json(*arg0); end
  def to_h; end
  def to_s; end
end

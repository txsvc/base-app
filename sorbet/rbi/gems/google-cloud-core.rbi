# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/google-cloud-core/all/google-cloud-core.rbi
#
# google-cloud-core-1.5.0

module Google
end
module Google::Cloud
  def self.auto_load_files; end
  def self.auto_load_gems; end
  def self.configure; end
  def self.init_configuration; end
  def self.loaded_files; end
  def self.new(project_id = nil, credentials = nil, retries: nil, timeout: nil); end
end
class Google::Cloud::Config < BasicObject
  def [](key); end
  def []=(key, value); end
  def add_alias!(key, to_key); end
  def add_config!(key, config = nil, &block); end
  def add_field!(key, initial = nil, opts = nil, &block); end
  def add_options(legacy_categories); end
  def alias?(key); end
  def aliases!; end
  def build_enum_validator!(allowed, allow_nil); end
  def build_match_validator!(matches, allow_nil); end
  def build_proc_validator!(proc, allow_nil); end
  def delete!(key = nil); end
  def field?(key); end
  def fields!; end
  def initialize(legacy_categories = nil, opts = nil); end
  def inspect; end
  def method_missing(name, *args); end
  def nil?; end
  def option?(key); end
  def reset!(key = nil); end
  def resolve_key!(key); end
  def resolve_validator!(initial, opts); end
  def respond_to?(key); end
  def respond_to_missing?(name, include_private); end
  def self.config?(obj); end
  def self.create(show_warnings: nil); end
  def self.credentials_from_env(*vars); end
  def self.deferred(&block); end
  def subconfig?(key); end
  def subconfigs!; end
  def to_h!; end
  def to_s!; end
  def validate_new_key!(key); end
  def validate_value!(key, validator, value); end
  def value_set?(key); end
  def warn!(msg); end
end
class Google::Cloud::Config::DeferredValue
  def call; end
  def initialize(&block); end
end
module Google::Cloud::Core
end

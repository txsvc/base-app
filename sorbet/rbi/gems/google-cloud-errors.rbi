# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/google-cloud-errors/all/google-cloud-errors.rbi
#
# google-cloud-errors-1.0.1

module Google
end
module Google::Cloud
end
class Google::Cloud::Error < StandardError
  def body; end
  def code; end
  def details; end
  def header; end
  def initialize(msg = nil); end
  def metadata; end
  def self.from_error(error); end
  def self.gapi_error_class_for(http_status_code); end
  def self.grpc_error_class_for(grpc_error_code); end
  def status_code; end
  def status_details; end
end
class Google::Cloud::CanceledError < Google::Cloud::Error
end
class Google::Cloud::UnknownError < Google::Cloud::Error
end
class Google::Cloud::InvalidArgumentError < Google::Cloud::Error
end
class Google::Cloud::DeadlineExceededError < Google::Cloud::Error
end
class Google::Cloud::NotFoundError < Google::Cloud::Error
end
class Google::Cloud::AlreadyExistsError < Google::Cloud::Error
end
class Google::Cloud::PermissionDeniedError < Google::Cloud::Error
end
class Google::Cloud::UnauthenticatedError < Google::Cloud::Error
end
class Google::Cloud::ResourceExhaustedError < Google::Cloud::Error
end
class Google::Cloud::FailedPreconditionError < Google::Cloud::Error
end
class Google::Cloud::AbortedError < Google::Cloud::Error
end
class Google::Cloud::OutOfRangeError < Google::Cloud::Error
end
class Google::Cloud::UnimplementedError < Google::Cloud::Error
end
class Google::Cloud::InternalError < Google::Cloud::Error
end
class Google::Cloud::UnavailableError < Google::Cloud::Error
end
class Google::Cloud::DataLossError < Google::Cloud::Error
end
module Google::Cloud::Errors
end
